/*!
 * As-Select3 - Modern JavaScript Select Library
 * Version: 1.3.0
 * Author: Sunil Kumar
 * Repository: https://github.com/sunil4587/As-select3
 * License: MIT
 */
!function(e){"use strict";class t{constructor(t,s={}){if(!e(t).length)throw new Error(`As-Select3: Element "${t}" not found`);this.$element=e(t),this.element=this.$element[0];let i=this.$element.closest(".as-select3-container");i.length||(i=e('<div class="as-select3-container"></div>'),this.$element.before(i),i.append(this.$element)),this.$container=i,this.isMultiple=void 0!==this.$element.attr("multiple"),this.options=e.extend({placeholder:this.isMultiple?"Select options...":"Choose an option...",searchable:!1!==this.$element.data("search"),selectAll:!1!==s.selectAll&&this.isMultiple,clearAll:!1!==s.clearAll,maxSelection:s.maxSelection||null,remote:s.remote||null,searchDelay:s.searchDelay||300,noResultsText:"No results found",loadingText:"Loading...",searchPlaceholder:"Search options...",selectAllText:"Select All",clearAllText:"Clear All",defaultIconClass:"as-select3-arrow-down",iconPrefix:s.iconPrefix||null,allowHtml:!1!==s.allowHtml,fuzzySearch:!1!==s.fuzzySearch,highlightMatches:!1!==s.highlightMatches,virtualScrolling:!0===s.virtualScrolling,itemHeight:s.itemHeight||32,maxHeight:s.maxHeight||300,escapeMarkup:s.escapeMarkup||function(e){return e},templateResult:s.templateResult||null,templateSelection:s.templateSelection||null,matcher:s.matcher||null},s),this.isOpen=!1,this.focusIndex=-1,this.selectedValues=this.isMultiple?[]:this.$element.find("option:selected").val()||null,this.isLoading=!1,this.searchTimer=null,this.originalOptions=[],this.filteredOptions=[],this.searchCache=new Map,this.performanceMetrics={searchTime:0,renderTime:0},this.init()}init(){this.createUI(),this.bindEvents(),this.updateFromSelect(),this.storeOriginalOptions()}createUI(){this.$trigger=e('<div class="as-select3-trigger" tabindex="0" role="combobox" aria-expanded="false"></div>'),this.$selection=e('<div class="as-select3-selection"></div>'),this.$placeholder=e(`<span class="as-select3-placeholder">${this.options.placeholder}</span>`),this.$arrow=e(`<span class="${this.options.defaultIconClass} as-select3-arrow"></span>`),this.$selection.append(this.$placeholder),this.$trigger.append(this.$selection,this.$arrow),this.$container.append(this.$trigger),this.$element.addClass("d-none"),this.createDropdown()}createDropdown(){this.$dropdown=e('<div class="as-select3-dropdown" role="listbox"></div>'),this.options.searchable&&this.createSearch(),this.createOptionsContainer();const t=this.$element.find("option:not(:disabled)").length,s=this.options.selectAll&&(!this.options.maxSelection||this.options.maxSelection>=t);(s||this.options.clearAll)&&this.createActions(s),this.$container.append(this.$dropdown)}createSearch(){const t=e('<div class="as-select3-search"><div class="position-relative w-100"></div></div>');this.$searchInput=e('<input type="text" class="form-control form-control-sm" role="searchbox">').attr("placeholder",this.options.searchPlaceholder);const s=e('<span class="as-select3-close as-select3-search-clear"></span>');t.find("div").append(this.$searchInput,s),this.$dropdown.append(t)}createOptionsContainer(){this.$optionsContainer=e('<div class="as-select3-options"></div>');const t=this.$element.find("option").length;this.options.virtualScrolling&&t>100?this.setupVirtualScrolling():this.$element.find("option").each(((e,t)=>{this.$optionsContainer.append(this.createOptionElement(t,e))})),this.$dropdown.append(this.$optionsContainer)}setupVirtualScrolling(){const t=this.$element.find("option").toArray(),s=this.options.itemHeight,i=this.options.maxHeight,n=Math.ceil(i/s);this.$optionsContainer.css({"max-height":i+"px","overflow-y":"auto"}),this.$virtualContainer=e('<div class="as-select3-virtual-container"></div>'),this.$virtualContainer.css({height:t.length*s+"px",position:"relative"}),this.$optionsContainer.append(this.$virtualContainer),this.renderVirtualItems(0,Math.min(n+5,t.length)),this.$optionsContainer.on("scroll",(()=>{this.handleVirtualScroll()}))}renderVirtualItems(e,t){if(!this.$virtualContainer)return;const s=this.$element.find("option").toArray(),i=this.options.itemHeight;this.$virtualContainer.empty();for(let n=e;n<t&&n<s.length;n++){const e=this.createOptionElement(s[n],n);e.css({position:"absolute",top:n*i+"px",left:"0",right:"0",height:i+"px"}),this.$virtualContainer.append(e)}}handleVirtualScroll(){if(!this.$virtualContainer)return;const e=this.$optionsContainer.scrollTop(),t=this.$optionsContainer.height(),s=this.options.itemHeight,i=this.$element.find("option").toArray(),n=Math.floor(e/s),o=Math.ceil(t/s),a=Math.min(n+o+10,i.length);this.renderVirtualItems(Math.max(0,n-5),a)}createOptionElement(t,s){const i=t instanceof HTMLOptionElement?{value:t.value,text:t.text,selected:t.selected,icon:e(t).data("icon")||e(t).attr("data-icon"),html:e(t).data("html")||e(t).attr("data-html")||e(t).html(),disabled:t.disabled}:{value:t.value||t.val,text:t.text||t.label,selected:!!t.selected,icon:t.icon,html:t.html||t.text||t.label,disabled:!!t.disabled},n=e('<div class="as-select3-option" role="option" tabindex="-1"></div>').data({value:i.value,index:s,icon:i.icon,html:i.html,text:i.text}).attr("aria-selected",i.selected.toString());let o=e('<div class="as-select3-option-left"></div>');if(this.options.templateResult&&"function"==typeof this.options.templateResult){const e=this.options.templateResult(i);e&&o.html(e)}else if(this.options.allowHtml&&i.html&&i.html!==i.text)o.html(this.options.escapeMarkup(i.html));else{if(i.icon){const t=e('<div class="as-select3-option-icon"></div>');this.addIcon(t,i.icon,"16px"),o.append(t)}o.append(e('<span class="as-select3-option-text"></span>').text(i.text))}return n.append(o),this.isMultiple&&n.append(e('<input type="checkbox" class="form-check-input">').prop("checked",i.selected)),i.selected&&n.addClass("selected"),i.disabled&&n.addClass("disabled").attr("aria-disabled","true"),n}addIcon(t,s,i="14px"){if(s)if(s.match(/^(https?:|data:|\.?\/)/))t.append(e("<img>").attr({src:s,alt:""}).css({width:i,height:i,objectFit:"cover"}));else if(this.isIconClass(s)){const i=e("<i></i>").addClass(s);t.append(i)}else t.html(s)}isIconClass(e){if(!e||"string"!=typeof e)return!1;return["bi-","fa-","fas-","far-","fab-","fal-","fad-","material-icons","icon-","glyphicon-","mdi-","feather-","lucide-","tabler-icon-","heroicon-","phosphor-","remix-"].some((t=>e.includes(t)))||e.match(/^(bi|fa|fas|far|fab|fal|fad|material-icons|icon|glyphicon|mdi|feather|lucide|tabler|heroicon|phosphor|remix)\s/)||this.options.iconPrefix&&e.startsWith(this.options.iconPrefix)}createActions(t){if(!this.isMultiple)return;const s=e('<div class="as-select3-actions"></div>');t&&s.append(e('<button type="button" class="btn btn-sm btn-outline-primary"></button>').text(this.options.selectAllText).on("click",(()=>this.selectAll()))),this.options.clearAll&&s.append(e('<button type="button" class="btn btn-sm btn-outline-secondary"></button>').text(this.options.clearAllText).on("click",(()=>this.clearAll()))),this.$dropdown.append(s)}bindEvents(){this.$trigger.on("click",(t=>{e(t.target).hasClass("as-select3-clear")||(t.preventDefault(),this.toggle())})),this.$container.on("click",".as-select3-clear",(e=>(e.stopPropagation(),e.preventDefault(),this.clearSingle(),!1))).on("click",".as-select3-tag-remove",(t=>{t.stopPropagation(),t.preventDefault();const s=e(t.target).closest(".as-select3-tag").data("value");return s&&this.removeTag(s),!1})).on("click",".as-select3-search-clear",(e=>(e.stopPropagation(),e.preventDefault(),this.$searchInput&&this.$searchInput.val("").trigger("input").focus(),!1))),this.$trigger.on("keydown",(e=>this.handleKeyDown(e))),this.$searchInput&&(this.$searchInput.on("input",(e=>{const t=e.target.value;this.options.remote?(this.searchTimer&&clearTimeout(this.searchTimer),this.searchTimer=setTimeout((()=>this.remoteSearch(t)),this.options.searchDelay)):this.search(t)})),this.$searchInput.on("keydown",(e=>{"Escape"===e.key&&this.close()}))),this.$optionsContainer.on("click",".as-select3-option",(t=>{const s=e(t.currentTarget);if(s.hasClass("disabled"))return!1;this.toggleOption(s)})),e(document).on("click.asSelect3",(e=>{this.$container.is(e.target)||this.$container.has(e.target).length||this.close()})),this.$element.on("invalid",(()=>{this.$trigger.addClass("is-invalid")})).closest("form").on("reset.asSelect3",(()=>{setTimeout((()=>this.reset()),0)}))}handleKeyDown(e){switch(e.key){case"Enter":case" ":if(e.preventDefault(),this.isOpen){const e=this.$optionsContainer.find(".focused");e.length&&this.toggleOption(e)}else this.open();break;case"Escape":this.isOpen&&(e.preventDefault(),this.close());break;case"ArrowDown":e.preventDefault(),this.isOpen?this.focusNext():this.open();break;case"ArrowUp":e.preventDefault(),this.isOpen?this.focusPrevious():this.open();break;case"Home":this.isOpen&&(e.preventDefault(),this.focusFirst());break;case"End":this.isOpen&&(e.preventDefault(),this.focusLast());break;case"PageDown":this.isOpen&&(e.preventDefault(),this.focusPageDown());break;case"PageUp":this.isOpen&&(e.preventDefault(),this.focusPageUp());break;case"Tab":this.isOpen&&!e.shiftKey&&this.close();break;default:this.isOpen&&1===e.key.length&&/[a-zA-Z0-9]/.test(e.key)&&this.quickSearch(e.key)}}focusFirst(){const e=this.$optionsContainer.find(".as-select3-option:visible:not(.disabled)");e.length&&(this.$optionsContainer.find(".focused").removeClass("focused"),this.focusIndex=0,this.scrollToOption(e.eq(0).addClass("focused")))}focusLast(){const e=this.$optionsContainer.find(".as-select3-option:visible:not(.disabled)");e.length&&(this.$optionsContainer.find(".focused").removeClass("focused"),this.focusIndex=e.length-1,this.scrollToOption(e.eq(this.focusIndex).addClass("focused")))}focusPageDown(){const e=this.$optionsContainer.find(".as-select3-option:visible:not(.disabled)");e.length&&(this.$optionsContainer.find(".focused").removeClass("focused"),this.focusIndex=Math.min(this.focusIndex+10,e.length-1),this.scrollToOption(e.eq(this.focusIndex).addClass("focused")))}focusPageUp(){const e=this.$optionsContainer.find(".as-select3-option:visible:not(.disabled)");e.length&&(this.$optionsContainer.find(".focused").removeClass("focused"),this.focusIndex=Math.max(this.focusIndex-10,0),this.scrollToOption(e.eq(this.focusIndex).addClass("focused")))}quickSearch(t){this.quickSearchTimer||(this.quickSearchQuery=""),clearTimeout(this.quickSearchTimer),this.quickSearchQuery+=t.toLowerCase();const s=this.$optionsContainer.find(".as-select3-option:visible:not(.disabled)");let i=!1;s.each(((t,s)=>{const n=e(s);if((n.data("text")||n.text()).toLowerCase().startsWith(this.quickSearchQuery))return this.$optionsContainer.find(".focused").removeClass("focused"),this.focusIndex=t,this.scrollToOption(n.addClass("focused")),i=!0,!1})),this.quickSearchTimer=setTimeout((()=>{this.quickSearchQuery="",this.quickSearchTimer=null}),1e3)}focusNext(){const e=this.$optionsContainer.find(".as-select3-option:visible:not(.disabled)");e.length&&(this.$optionsContainer.find(".focused").removeClass("focused"),this.focusIndex=this.focusIndex<e.length-1?this.focusIndex+1:0,this.scrollToOption(e.eq(this.focusIndex).addClass("focused")))}focusPrevious(){const e=this.$optionsContainer.find(".as-select3-option:visible:not(.disabled)");e.length&&(this.$optionsContainer.find(".focused").removeClass("focused"),this.focusIndex=this.focusIndex>0?this.focusIndex-1:e.length-1,this.scrollToOption(e.eq(this.focusIndex).addClass("focused")))}scrollToOption(e){if(!e.length)return;const t=this.$optionsContainer[0],s=e[0],i=s.offsetTop,n=i+s.offsetHeight;i<t.scrollTop?t.scrollTop=i:n>t.scrollTop+t.clientHeight&&(t.scrollTop=n-t.clientHeight)}toggle(){this.isOpen?this.close():this.open()}open(){this.isOpen||(this.isOpen=!0,this.$dropdown.addClass("show"),this.$trigger.addClass("active").attr("aria-expanded","true"),this.$container.addClass("active"),this.$searchInput&&this.$searchInput.focus(),this.$element.trigger("asSelect3:open"))}close(){this.isOpen&&(this.isOpen=!1,this.$dropdown.removeClass("show"),this.$trigger.removeClass("active").attr("aria-expanded","false"),this.$container.removeClass("active"),this.$optionsContainer.find(".focused").removeClass("focused"),this.focusIndex=-1,this.$searchInput&&(this.$searchInput.val(""),this.search("")),this.clearHighlighting(),this.$element.trigger("asSelect3:close"))}toggleOption(e){if(!e||0===e.length||e.hasClass("disabled"))return!1;const t=e.data("value"),s=this.$element.find(`option[value="${t}"]`);if(!s.length)return!1;const i=e.hasClass("selected");if(i)s.prop("selected",!1),e.removeClass("selected").attr("aria-selected","false"),this.isMultiple?(e.find('input[type="checkbox"]').prop("checked",!1),this.selectedValues=this.selectedValues.filter((e=>e!==t))):this.selectedValues=null;else{if(this.isMultiple){if(this.options.maxSelection&&this.selectedValues.length>=this.options.maxSelection)return void this.$element.trigger("asSelect3:maxselection",{max:this.options.maxSelection});this.selectedValues.push(t)}else this.$optionsContainer.find(".as-select3-option").removeClass("selected").attr("aria-selected","false"),this.$element.find("option").prop("selected",!1),this.selectedValues=t;s.prop("selected",!0),e.addClass("selected").attr("aria-selected","true"),this.isMultiple?e.find('input[type="checkbox"]').prop("checked",!0):this.close()}i&&!this.isMultiple||(this.$trigger.removeClass("is-invalid"),this.updateSelection(),this.$element.trigger("change").trigger("asSelect3:change",{value:this.getValue()}))}search(t){const s=performance.now();if(this.clearHighlighting(),this.searchCache.has(t))return this.applySearchResults(this.searchCache.get(t),t),void(this.performanceMetrics.searchTime=performance.now()-s);if(this.options.matcher&&"function"==typeof this.options.matcher)this.customSearch(t);else{const s=this.$optionsContainer.find(".as-select3-option").not(".as-select3-no-results, .as-select3-loading");let i=!1;const n=[];if(s.each(((s,o)=>{const a=e(o),l=a.data("text")||a.text(),c=this.matchText(l,t);c&&(i=!0,n.push({element:a,text:l,matches:!0}),this.options.highlightMatches&&t&&this.highlightText(a,l,t)),a.toggle(c)})),this.searchCache.set(t,n),this.searchCache.size>50){const e=this.searchCache.keys().next().value;this.searchCache.delete(e)}this.toggleNoResults(!i&&t.length>0),this.focusIndex=-1}this.performanceMetrics.searchTime=performance.now()-s}applySearchResults(t,s){this.clearHighlighting();this.$optionsContainer.find(".as-select3-option").not(".as-select3-no-results, .as-select3-loading").each(((i,n)=>{const o=e(n),a=t.find((e=>e.element.is(o)));a?(o.show(),this.options.highlightMatches&&s&&this.highlightText(o,a.text,s)):o.hide()})),this.toggleNoResults(0===t.length&&s.length>0),this.focusIndex=-1}highlightText(e,t,s){if(!s)return;const i=e.find(".as-select3-option-text");if(!i.length)return;i.data("original-text")||i.data("original-text",i.text());const n=i.data("original-text"),o=new RegExp(`(${this.escapeRegex(s)})`,"gi"),a=n.replace(o,'<mark class="as-select3-highlight">$1</mark>');a!==n&&i.html(a)}clearHighlighting(){this.$optionsContainer.find(".as-select3-option-text").each(((t,s)=>{const i=e(s),n=i.data("original-text");n&&i.text(n)}))}escapeRegex(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}customSearch(t){const s=this.$optionsContainer.find(".as-select3-option").not(".as-select3-no-results, .as-select3-loading");let i=!1;s.each(((s,n)=>{const o=e(n),a={id:o.data("value"),text:o.data("text")||o.text(),html:o.data("html")},l=this.options.matcher(t,a);o.toggle(l),l&&(i=!0)})),this.toggleNoResults(!i&&t.length>0),this.focusIndex=-1}matchText(e,t){if(!t)return!0;const s=t.toLowerCase(),i=e.toLowerCase();if(i===s)return!0;if(i.startsWith(s))return!0;if(i.includes(s))return!0;let n=0;for(let e=0;e<i.length&&n<s.length;e++)i[e]===s[n]&&n++;return n===s.length}async remoteSearch(e){if(this.options.remote&&"function"==typeof this.options.remote){this.showLoading();try{const t=await this.options.remote(e);Array.isArray(t)?this.populateOptions(t):t&&t.options&&Array.isArray(t.options)?this.populateOptions(t.options):console.warn("Invalid remote response")}catch(e){console.error("Remote search error:",e),this.showNoResults(),this.$element.trigger("asSelect3:error",{error:e})}finally{this.hideLoading()}}}showLoading(){this.isLoading=!0,this.hideNoResults(),this.$optionsContainer.find(".as-select3-option").hide();const e=".as-select3-loading";this.$optionsContainer.find(e).length||this.$optionsContainer.append(`\n                    <div class="${e.substring(1)}">\n                        <div class="spinner-border spinner-border-sm me-2"></div>\n                        ${this.options.loadingText}\n                    </div>\n                `)}hideLoading(){this.isLoading=!1,this.$optionsContainer.find(".as-select3-loading").remove(),this.$optionsContainer.find(".as-select3-option").show()}toggleNoResults(e){const t=".as-select3-no-results",s=this.$optionsContainer.find(t);e&&!s.length?this.$optionsContainer.append(`\n                    <div class="${t.substring(1)}">\n                        <span class="as-select3-search-icon me-2"></span>\n                        ${this.options.noResultsText}\n                    </div>\n                `):!e&&s.length&&s.remove()}hideNoResults(){this.$optionsContainer.find(".as-select3-no-results").remove()}selectAll(){if(!this.isMultiple)return;const e=this.$element.find("option:not(:disabled)");e.prop("selected",!0),e.each(((e,t)=>{const s=t.value,i=this.$optionsContainer.find(`[data-value="${s}"]`);i.length&&!i.hasClass("disabled")&&(i.addClass("selected").attr("aria-selected","true"),i.find('input[type="checkbox"]').prop("checked",!0))})),this.updateFromSelect(),this.$element.trigger("change").trigger("asSelect3:selectall")}clearAll(){this.$element.find("option").prop("selected",!1),this.isMultiple?(this.selectedValues=[],this.$optionsContainer.find(".as-select3-option").removeClass("selected").attr("aria-selected","false"),this.$optionsContainer.find('input[type="checkbox"]').prop("checked",!1)):(this.selectedValues=null,this.$optionsContainer.find(".as-select3-option").removeClass("selected").attr("aria-selected","false")),this.updateSelection(),this.$element.trigger("change").trigger("asSelect3:clearall")}updateSelection(){if(this.$selection.empty(),this.isMultiple)this.selectedValues.length>0?this.selectedValues.forEach((e=>{const t=this.$element.find(`option[value="${e}"]`),s=this.$optionsContainer.find(`[data-value="${e}"]`);if(t.length){const i=t.text(),n=t.attr("data-html")||s.data("html"),o=t.attr("data-icon")||s.data("icon");this.$selection.append(this.createTag(i,e,n,o))}})):this.$selection.append(this.$placeholder);else if(this.selectedValues){const t=this.$element.find(`option[value="${this.selectedValues}"]`),s=this.$optionsContainer.find(`[data-value="${this.selectedValues}"]`);if(t.length){const i=e('<div class="as-select3-single-container"></div>'),n=e('<span class="as-select3-single-value"></span>'),o=e('<span class="as-select3-close as-select3-clear"></span>').attr("data-value",this.selectedValues),a=t.text(),l=t.attr("data-html")||s.data("html"),c=t.attr("data-icon")||s.data("icon");if(this.options.templateSelection&&"function"==typeof this.options.templateSelection){const e=this.options.templateSelection({id:this.selectedValues,text:a,html:l});e&&n.html(e)}else if(this.options.allowHtml&&l&&l!==a&&""!==l.trim())n.html(this.options.escapeMarkup(l));else{if(c){const t=e('<div class="as-select3-single-icon"></div>');this.addIcon(t,c,"16px"),n.append(t)}n.append(e("<span></span>").text(a))}i.append(n,o),this.$selection.append(i)}}else this.$selection.append(this.$placeholder);this.updateOptionStates()}updateOptionStates(){if(this.isMultiple&&this.options.maxSelection){const t=this.selectedValues.length>=this.options.maxSelection;this.$optionsContainer.find(".as-select3-option").each(((s,i)=>{const n=e(i),o=n.hasClass("selected"),a=n.find('input[type="checkbox"]');t&&!o?(n.addClass("disabled").attr("aria-disabled","true"),a.prop("disabled",!0)):(n.removeClass("disabled").attr("aria-disabled","false"),a.prop("disabled",!1))}))}}createTag(t,s,i,n){const o=e('<span class="as-select3-tag"></span>').data("value",s);let a,l;if(this.options.templateSelection&&"function"==typeof this.options.templateSelection){const n=this.options.templateSelection({id:s,text:t,html:i});n&&(a=e('<span class="as-select3-tag-content"></span>').html(n))}if(!this.options.templateSelection||!a)if(this.options.allowHtml&&i&&i!==t&&""!==i.trim())a=e('<span class="as-select3-tag-content"></span>').html(this.options.escapeMarkup(i));else{if(n){const t=e('<div class="as-select3-tag-icon"></div>');this.addIcon(t,n),o.append(t)}a=e('<span class="as-select3-tag-text"></span>').text(t).attr("title",t)}return l=e('<span class="as-select3-close as-select3-tag-remove"></span>'),o.append(a,l),o}removeTag(e){const t=this.$element.find(`option[value="${e}"]`),s=this.$optionsContainer.find(`[data-value="${e}"]`);t.length&&(t.prop("selected",!1),this.isMultiple?(s.find('input[type="checkbox"]').prop("checked",!1),this.selectedValues=this.selectedValues.filter((t=>t!==e))):this.selectedValues=null,s.removeClass("selected").attr("aria-selected","false"),this.updateSelection(),this.$element.trigger("change").trigger("asSelect3:tagremoved",{value:e}))}clearSingle(){this.selectedValues=null,this.$element.find("option").prop("selected",!1),this.$optionsContainer.find(".as-select3-option").removeClass("selected").attr("aria-selected","false"),this.updateSelection(),this.$element.trigger("change").trigger("asSelect3:cleared")}clearSelection(){this.isMultiple?this.clearAll():this.clearSingle()}updateFromSelect(){this.isMultiple?(this.selectedValues=[],this.$element.find("option:selected").each(((e,t)=>{this.selectedValues.push(t.value)}))):this.selectedValues=this.$element.find("option:selected").val()||null,this.updateSelection()}storeOriginalOptions(){this.originalOptions=this.$element.find("option").map((function(){return{value:this.value,text:this.text,selected:this.selected,html:e(this).data("html"),icon:e(this).data("icon")}})).get()}populateOptions(t=[]){this.$element.empty(),this.$optionsContainer.empty(),t.forEach(((t,s)=>{const i=e("<option></option>").val(t.value).text(t.text||t.label).prop("selected",!!t.selected);t.icon&&i.data("icon",t.icon),t.html&&i.data("html",t.html),t.disabled&&i.prop("disabled",!0),this.$element.append(i),this.$optionsContainer.append(this.createOptionElement(t,s))})),this.updateFromSelect()}addOption(t){const s=e("<option></option>").val(t.value).text(t.text||t.label).prop("selected",!!t.selected);return t.icon&&s.data("icon",t.icon),t.html&&s.data("html",t.html),t.disabled&&s.prop("disabled",!!t.disabled),this.$element.append(s),this.$optionsContainer.append(this.createOptionElement(t,this.$element.find("option").length-1)),t.selected&&this.updateFromSelect(),this.$element.trigger("asSelect3:optionadded",{option:t}),s}removeOption(e){this.$element.find(`option[value="${e}"]`).remove(),this.$optionsContainer.find(`[data-value="${e}"]`).remove(),this.isMultiple?this.selectedValues=this.selectedValues.filter((t=>t!==e)):this.selectedValues===e&&(this.selectedValues=null),this.updateSelection(),this.$element.trigger("asSelect3:optionremoved",{value:e})}clearOptions(){this.$element.empty(),this.$optionsContainer.empty(),this.selectedValues=this.isMultiple?[]:null,this.updateSelection(),this.$element.trigger("asSelect3:optionscleared")}refreshOptions(){this.$optionsContainer.empty(),this.$element.find("option").each(((e,t)=>{this.$optionsContainer.append(this.createOptionElement(t,e))})),this.updateFromSelect()}getValue(){return this.selectedValues}setValue(e){Array.isArray(e)&&this.isMultiple?(this.$element.find("option").prop("selected",!1),e.forEach((e=>{this.$element.find(`option[value="${e}"]`).prop("selected",!0)}))):Array.isArray(e)||this.isMultiple||(this.$element.find("option").prop("selected",!1),this.$element.find(`option[value="${e}"]`).prop("selected",!0)),this.updateFromSelect(),this.$element.trigger("change").trigger("asSelect3:valuechanged",{value:this.getValue()})}reset(){this.clearAll(),this.originalOptions.forEach((e=>{e.selected&&(this.isMultiple?this.selectedValues.push(e.value):this.selectedValues=e.value)})),this.updateFromSelect()}enable(){this.$container.removeClass("disabled"),this.$trigger.attr("tabindex","0"),this.$element.prop("disabled",!1)}disable(){this.close(),this.$container.addClass("disabled"),this.$trigger.attr("tabindex","-1"),this.$element.prop("disabled",!0)}destroy(){return this.searchTimer&&(clearTimeout(this.searchTimer),this.searchTimer=null),this.quickSearchTimer&&(clearTimeout(this.quickSearchTimer),this.quickSearchTimer=null),this.close(),this.$trigger.off(),this.$container.off(),this.$optionsContainer.off(),e(document).off("click.asSelect3"),this.$element.off("invalid").closest("form").off("reset.asSelect3"),this.searchCache.clear(),this.filteredOptions=[],this.originalOptions=[],this.$element.removeClass("d-none").insertAfter(this.$container),this.$container.remove(),delete this.element._asSelect3,this.$element=null,this.$container=null,this.$trigger=null,this.$dropdown=null,this.$optionsContainer=null,this.$searchInput=null,this.$element}getPerformanceMetrics(){return{searchTime:this.performanceMetrics.searchTime,renderTime:this.performanceMetrics.renderTime,cacheSize:this.searchCache.size,optionCount:this.$element?this.$element.find("option").length:0}}clearSearchCache(){this.searchCache.clear()}}e.fn.asSelect3=function(e){return this.each((function(){this._asSelect3||(this._asSelect3=new t(this,e))}))},t.autoInit=function(s=".as-select3-container select"){return e(s).filter((function(){return!this._asSelect3})).map((function(){const e=new t(this);return this._asSelect3=e,e})).get()},window.AsSelect3=t}(jQuery);
//# sourceMappingURL=as-select3.min.js.map