!function(e){"use strict";class t{constructor(t,s={}){if(this.$element=e(t),!this.$element.length)throw new Error(`Select3: Element "${t}" not found`);this.element=this.$element[0],this.$container=this.$element.closest(".select3-container"),this.$container.length||(this.$container=e('<div class="select3-container"></div>'),this.$element.parent().insertBefore(this.$container),this.$container.append(this.$element)),this.isMultiple=void 0!==this.$element.attr("multiple"),this.options=e.extend({placeholder:this.isMultiple?"Select options...":"Choose an option...",searchable:!1!==this.$element.data("search"),selectAll:!1!==s.selectAll&&this.isMultiple,clearAll:!1!==s.clearAll,maxSelection:s.maxSelection||null,remote:s.remote||null,searchDelay:s.searchDelay||300,noResultsText:"No results found",loadingText:"Loading...",searchPlaceholder:"Search options...",selectAllText:"Select All",clearAllText:"Clear All",tagMaxWidth:"200px",dropdownMaxHeight:"300px",optionsMaxHeight:"200px"},s),this.isOpen=!1,this.focusedIndex=-1,this.selectedValues=[],this.selectedValue=null,this.isLoading=!1,this.searchTimeout=null,this.originalOptions=[],this.init(),this.bindEvents(),this.updateFromSelect(),this.storeOriginalOptions()}init(){this.createSelect3(),this.createDropdown(),this.updateSelection()}createSelect3(){this.$trigger=e('<div class="select3-trigger" tabindex="0" role="combobox" aria-expanded="false" aria-haspopup="listbox"></div>'),this.$selection=e('<div class="select3-selection"></div>'),this.$placeholder=e(`<span class="select3-placeholder">${this.options.placeholder}</span>`),this.$arrow=e('<i class="bi bi-chevron-down select3-arrow" aria-hidden="true"></i>'),this.$selection.append(this.$placeholder),this.$trigger.append(this.$selection).append(this.$arrow),this.$container.append(this.$trigger),this.$element.addClass("d-none")}createDropdown(){this.$dropdown=e('<div class="select3-dropdown" role="listbox" aria-multiselectable="'+this.isMultiple.toString()+'"></div>'),this.options.searchable&&this.createSearchBox(),this.createOptions(),(this.options.selectAll||this.options.clearAll)&&this.createActions(),this.$container.append(this.$dropdown)}createSearchBox(){const t=e('<div class="select3-search"></div>'),s=e('<div class="position-relative w-100"></div>');this.$searchInput=e('<input type="text" class="form-control form-control-sm" role="searchbox" aria-label="Search options">').attr("placeholder",this.options.searchPlaceholder);const i=e('<i class="bi bi-x select3-search-clear" aria-label="Clear search"></i>');s.append(this.$searchInput).append(i),t.append(s),this.$dropdown.append(t)}createOptions(){this.$optionsContainer=e('<div class="select3-options" role="group"></div>'),this.$element.find("option").each(((t,s)=>{const i={value:s.value,text:s.text,selected:s.selected,icon:e(s).data("icon")||null};this.$optionsContainer.append(this.createOptionElement(i,t))})),this.$dropdown.append(this.$optionsContainer)}createOptionElement(t,s){let i,n,l,o;t instanceof HTMLOptionElement?(i=t.value,n=t.text,l=t.selected,o=e(t).data("icon")||null):(i=t.value,n=t.text||t.label,l=!!t.selected,o=t.icon||null);const a=e('<div class="select3-option" role="option" tabindex="-1"></div>').data("value",i).data("index",s).data("icon",o).attr("aria-selected",l.toString()),c=e('<div class="select3-option-left"></div>');if(o){const t=e('<div class="select3-option-icon"></div>');o.startsWith("http")||o.startsWith("data:")||o.startsWith("./")||o.startsWith("/")?t.append(e("<img>").attr("src",o).attr("alt","")):t.append(e("<i>").addClass(o)),c.append(t)}return c.append(e('<span class="select3-option-text"></span>').text(n)),a.append(c),this.isMultiple&&a.append(e('<input type="checkbox" class="form-check-input" aria-hidden="true">').prop("checked",l)),l&&a.addClass("selected"),a}createActions(){if(!this.isMultiple)return;const t=e('<div class="select3-actions"></div>');this.options.selectAll&&t.append(e('<button type="button" class="btn btn-sm btn-outline-primary"></button>').text(this.options.selectAllText).on("click",(()=>this.selectAll()))),this.options.clearAll&&t.append(e('<button type="button" class="btn btn-sm btn-outline-secondary"></button>').text(this.options.clearAllText).on("click",(()=>this.clearAll()))),this.$dropdown.append(t)}bindEvents(){this.$trigger.on("click",(t=>{e(t.target).hasClass("select3-clear")||(t.preventDefault(),this.toggle())})),this.$container.on("click",".select3-clear",(e=>(e.stopPropagation(),e.preventDefault(),this.clearSingleSelection(),!1))).on("click",".select3-tag-remove",(t=>{t.stopPropagation(),t.preventDefault();const s=e(t.target).closest(".select3-tag").data("value");return s&&this.removeTag(s),!1})).on("click",".select3-search-clear",(e=>(e.stopPropagation(),e.preventDefault(),this.$searchInput&&this.$searchInput.val("").trigger("input").focus(),!1))),this.$trigger.on("keydown",(e=>this.handleKeydown(e))),this.$searchInput&&(this.$searchInput.on("input",(e=>{const t=e.target.value;this.options.remote?(this.searchTimeout&&clearTimeout(this.searchTimeout),this.searchTimeout=setTimeout((()=>this.remoteSearch(t)),this.options.searchDelay)):this.search(t)})),this.$searchInput.on("keydown",(e=>{"Escape"===e.key&&this.close()}))),this.$optionsContainer.on("click",".select3-option",(t=>{if(e(t.currentTarget).hasClass("disabled"))return t.preventDefault(),t.stopPropagation(),!1;this.toggleOption(e(t.currentTarget))})),this.$optionsContainer.on("click",'.select3-option input[type="checkbox"]',(t=>{if(e(t.target).is(":disabled"))return t.preventDefault(),t.stopPropagation(),!1})),e(document).on("click.select3",(e=>{this.$container.is(e.target)||0!==this.$container.has(e.target).length||this.close()})),this.$element.on("invalid",(()=>this.$trigger.addClass("is-invalid"))).closest("form").on("reset.select3",(()=>setTimeout((()=>this.reset()),0)))}handleKeydown(e){switch(e.key){case"Enter":case" ":if(e.preventDefault(),this.isOpen){const e=this.$optionsContainer.find(".focused");e.length&&this.toggleOption(e)}else this.open();break;case"Escape":this.isOpen&&(e.preventDefault(),this.close());break;case"ArrowDown":e.preventDefault(),this.isOpen?this.focusNextOption():this.open();break;case"ArrowUp":e.preventDefault(),this.isOpen?this.focusPrevOption():this.open();break;case"Tab":this.isOpen&&(e.preventDefault(),this.focusNextOption())}}focusNextOption(){const e=this.$optionsContainer.find(".select3-option:visible:not(.disabled)");if(!e.length)return;this.$optionsContainer.find(".focused").removeClass("focused"),this.focusedIndex<e.length-1?this.focusedIndex++:this.focusedIndex=0;const t=e.eq(this.focusedIndex);t.addClass("focused"),this.scrollToOption(t)}focusPrevOption(){const e=this.$optionsContainer.find(".select3-option:visible:not(.disabled)");if(!e.length)return;this.$optionsContainer.find(".focused").removeClass("focused"),this.focusedIndex>0?this.focusedIndex--:this.focusedIndex=e.length-1;const t=e.eq(this.focusedIndex);t.addClass("focused"),this.scrollToOption(t)}scrollToOption(e){if(!e.length)return;const t=this.$optionsContainer[0],s=e[0].offsetTop,i=s+e[0].offsetHeight;s<t.scrollTop?t.scrollTop=s:i>t.scrollTop+t.clientHeight&&(t.scrollTop=i-t.clientHeight)}toggle(){this.isOpen?this.close():this.open()}open(){this.isOpen||(this.isOpen=!0,this.$dropdown.addClass("show"),this.$trigger.addClass("active").attr("aria-expanded","true"),this.$searchInput&&this.$searchInput.focus(),this.$element.trigger("select3:open"))}close(){this.isOpen&&(this.isOpen=!1,this.$dropdown.removeClass("show"),this.$trigger.removeClass("active").attr("aria-expanded","false"),this.$optionsContainer.find(".focused").removeClass("focused"),this.focusedIndex=-1,this.$searchInput&&(this.$searchInput.val(""),this.search("")),this.$element.trigger("select3:close"))}toggleOption(e){if(!e||!e.length)return;if(e.hasClass("disabled"))return;const t=e.data("value"),s=this.$element.find(`option[value="${t}"]`);if(!s.length)return;if(e.hasClass("selected"))if(s.prop("selected",!1),e.removeClass("selected").attr("aria-selected","false"),this.isMultiple){const s=e.find('input[type="checkbox"]');s.length&&s.prop("checked",!1),this.selectedValues=this.selectedValues.filter((e=>e!==t))}else this.selectedValue=null;else{if(this.isMultiple){if(this.options.maxSelection&&this.selectedValues.length>=this.options.maxSelection)return void this.$element.trigger("select3:maxselection",{max:this.options.maxSelection});this.selectedValues.push(t)}else this.$optionsContainer.find(".select3-option").removeClass("selected").attr("aria-selected","false"),this.$element.find("option").prop("selected",!1),this.selectedValue=t;if(s.prop("selected",!0),e.addClass("selected").attr("aria-selected","true"),this.isMultiple){const t=e.find('input[type="checkbox"]');t.length&&t.prop("checked",!0)}else this.close()}this.$trigger.removeClass("is-invalid"),this.updateSelection(),this.$element.trigger("change").trigger("select3:change",{value:this.getValue()})}search(t){const s=this.$optionsContainer.find(".select3-option").not(".select3-no-results, .select3-loading");let i=!1;s.each(((s,n)=>{const l=e(n),o=l.text().toLowerCase().includes(t.toLowerCase());l.toggle(o),o&&(i=!0)})),this.toggleNoResults(!i&&t.length>0),this.focusedIndex=-1}async remoteSearch(e){if(this.options.remote&&"function"==typeof this.options.remote){this.showLoading();try{const t=await this.options.remote(e);this.populateOptions(t)}catch(e){this.showNoResults(),this.$element.trigger("select3:error",{error:e})}finally{this.hideLoading()}}}showLoading(){this.isLoading=!0,this.hideNoResults();const t=".select3-loading";if(!this.$optionsContainer.find(t).length){const s=e(`<div class="${t.substring(1)}"><div class="spinner"></div>${this.options.loadingText}</div>`);this.$optionsContainer.append(s)}}hideLoading(){this.isLoading=!1,this.$optionsContainer.find(".select3-loading").remove()}toggleNoResults(t){const s=".select3-no-results",i=this.$optionsContainer.find(s);t&&!i.length?this.$optionsContainer.append(e(`<div class="${s.substring(1)}"><i class="bi bi-search me-2"></i>${this.options.noResultsText}</div>`)):!t&&i.length&&i.remove()}hideNoResults(){this.$optionsContainer.find(".select3-no-results").remove()}selectAll(){this.isMultiple&&(this.$element.find("option").prop("selected",!0),this.$optionsContainer.find(".select3-option").addClass("selected").attr("aria-selected","true"),this.$optionsContainer.find('input[type="checkbox"]').prop("checked",!0),this.updateFromSelect(),this.$element.trigger("change").trigger("select3:selectall"))}clearAll(){this.$element.find("option").prop("selected",!1),this.isMultiple?(this.selectedValues=[],this.$optionsContainer.find(".select3-option").removeClass("selected").attr("aria-selected","false"),this.$optionsContainer.find('input[type="checkbox"]').prop("checked",!1)):(this.selectedValue=null,this.$optionsContainer.find(".select3-option").removeClass("selected").attr("aria-selected","false")),this.updateSelection(),this.$element.trigger("change").trigger("select3:clearall")}async loadData(e,t={}){this.showLoading();try{const s=new URLSearchParams(t).toString(),i=s?`${e}?${s}`:e,n=await fetch(i);if(!n.ok)throw new Error(`HTTP error! status: ${n.status}`);const l=await n.json();if(l.options&&Array.isArray(l.options))this.populateOptions(l.options);else{if(!Array.isArray(l))throw new Error("Invalid data format received");this.populateOptions(l)}this.$element.trigger("select3:dataloaded",{data:l})}catch(e){this.showNoResults(),this.$element.trigger("select3:dataerror",{error:e})}finally{this.hideLoading()}}updateSelection(){if(this.$selection.empty(),this.isMultiple)this.selectedValues.length?this.selectedValues.forEach((e=>{const t=this.$element.find(`option[value="${e}"]`);t.length&&this.$selection.append(this.createTag(t.text(),e))})):this.$selection.append(this.$placeholder);else if(this.selectedValue){const t=this.$element.find(`option[value="${this.selectedValue}"]`);if(t.length){const s=e('<div class="select3-single-container"></div>'),i=e('<span class="select3-single-value"></span>'),n=e('<i class="bi bi-x select3-clear" aria-label="Clear selection" data-value="'+this.selectedValue+'"></i>');let l=null;const o=this.$optionsContainer.find(`[data-value="${this.selectedValue}"]`);if(o.length&&(l=o.data("icon")),l||(l=t.data("icon")),l){const t=e('<div class="select3-single-icon"></div>');l.startsWith("http")||l.startsWith("data:")||l.startsWith("./")||l.startsWith("/")?t.append(e("<img>").attr("src",l).attr("alt","")):t.append(e("<i>").addClass(l)),i.append(t)}i.append(e("<span></span>").text(t.text())),s.append(i).append(n),this.$selection.append(s)}}else this.$selection.append(this.$placeholder);this.updateOptionStates()}updateOptionStates(){if(!this.isMultiple||!this.options.maxSelection)return;const t=this.selectedValues.length>=this.options.maxSelection;this.$optionsContainer.find(".select3-option").each(((s,i)=>{const n=e(i),l=n.hasClass("selected"),o=n.find('input[type="checkbox"]');t&&!l?(n.addClass("disabled").attr("aria-disabled","true"),o.length&&o.prop("disabled",!0)):(n.removeClass("disabled").attr("aria-disabled","false"),o.length&&o.prop("disabled",!1))}))}createTag(t,s){const i=e('<span class="select3-tag" data-value="'+s+'"></span>'),n=e('<span class="select3-tag-text"></span>').text(t).attr("title",t),l=e('<i class="bi bi-x select3-tag-remove" aria-label="Remove '+t+'"></i>');let o=null;const a=this.$optionsContainer.find(`[data-value="${s}"]`);if(a.length&&(o=a.data("icon")),!o){const e=this.$element.find(`option[value="${s}"]`);e.length&&(o=e.data("icon"))}if(o){const t=e('<div class="select3-tag-icon"></div>');o.startsWith("http")||o.startsWith("data:")||o.startsWith("./")||o.startsWith("/")?t.append(e("<img>").attr("src",o).attr("alt","")):t.append(e("<i>").addClass(o)),i.append(t)}return i.append(n).append(l)}removeTag(e){const t=this.$element.find(`option[value="${e}"]`),s=this.$optionsContainer.find(`[data-value="${e}"]`);if(t.length){if(t.prop("selected",!1),this.isMultiple){const t=s.find('input[type="checkbox"]');t.length&&t.prop("checked",!1),this.selectedValues=this.selectedValues.filter((t=>t!==e))}else this.selectedValue=null;s.length&&s.removeClass("selected").attr("aria-selected","false"),this.updateSelection(),this.$element.trigger("change").trigger("select3:tagremoved",{value:e})}}clearSingleSelection(){this.selectedValue=null,this.$element.find("option").prop("selected",!1),this.$optionsContainer.find(".select3-option").removeClass("selected").attr("aria-selected","false"),this.updateSelection(),this.$element.trigger("change").trigger("select3:cleared")}clearSelection(){this.isMultiple?this.clearAll():this.clearSingleSelection()}updateFromSelect(){if(this.isMultiple)this.selectedValues=[],this.$element.find("option:selected").each(((e,t)=>{this.selectedValues.push(t.value)}));else{const e=this.$element.find("option:selected");this.selectedValue=e.length?e.val():null}this.updateSelection()}storeOriginalOptions(){this.originalOptions=this.$element.find("option").map((function(){return{value:this.value,text:this.text,selected:this.selected}})).get()}populateOptions(t=[]){this.$element.empty(),this.$optionsContainer.empty(),t.forEach(((t,s)=>{const i=e("<option></option>").val(t.value).text(t.text||t.label).prop("selected",!!t.selected);t.icon&&i.data("icon",t.icon),this.$element.append(i);const n={value:t.value,text:t.text||t.label,selected:!!t.selected,icon:t.icon||null},l=this.createOptionElement(n,s);this.$optionsContainer.append(l)})),this.updateFromSelect()}addOption(t){const s=e("<option></option>").val(t.value).text(t.text||t.label).prop("selected",!!t.selected);t.icon&&s.data("icon",t.icon),this.$element.append(s);const i=this.$element.find("option").length-1,n={value:t.value,text:t.text||t.label,selected:!!t.selected,icon:t.icon||null},l=this.createOptionElement(n,i);return this.$optionsContainer.append(l),t.selected&&this.updateFromSelect(),this.$element.trigger("select3:optionadded",{option:t}),s}removeOption(e){this.$element.find(`option[value="${e}"]`).remove(),this.$optionsContainer.find(`[data-value="${e}"]`).remove(),this.isMultiple?this.selectedValues=this.selectedValues.filter((t=>t!==e)):this.selectedValue===e&&(this.selectedValue=null),this.updateSelection(),this.$element.trigger("select3:optionremoved",{value:e})}clearOptions(){this.$element.empty(),this.$optionsContainer.empty(),this.selectedValues=[],this.selectedValue=null,this.updateSelection(),this.$element.trigger("select3:optionscleared")}refreshOptions(){this.$optionsContainer.empty(),this.$element.find("option").each(((e,t)=>{this.$optionsContainer.append(this.createOptionElement(t,e))})),this.updateFromSelect()}getValue(){return this.isMultiple?this.selectedValues:this.selectedValue}setValue(e){Array.isArray(e)&&this.isMultiple?(this.$element.find("option").prop("selected",!1),e.forEach((e=>{this.$element.find(`option[value="${e}"]`).prop("selected",!0)}))):Array.isArray(e)||this.isMultiple||(this.$element.find("option").prop("selected",!1),this.$element.find(`option[value="${e}"]`).prop("selected",!0)),this.updateFromSelect(),this.$element.trigger("change").trigger("select3:valuechanged",{value:this.getValue()})}reset(){this.clearAll(),this.originalOptions.forEach((e=>{e.selected&&(this.isMultiple?this.selectedValues.push(e.value):this.selectedValue=e.value)})),this.updateFromSelect()}enable(){this.$container.removeClass("disabled"),this.$trigger.attr("tabindex","0"),this.$element.prop("disabled",!1)}disable(){this.close(),this.$container.addClass("disabled"),this.$trigger.attr("tabindex","-1"),this.$element.prop("disabled",!0)}destroy(){return this.close(),this.$trigger.off(),this.$container.off(),this.$optionsContainer.off(),e(document).off("click.select3"),this.$element.off("invalid"),this.$element.closest("form").off("reset.select3"),this.$element.removeClass("d-none").insertAfter(this.$container),this.$container.remove(),delete this.element._select3,this.$element}}e.fn.select3=function(e){return this.each((function(){this._select3||(this._select3=new t(this,e))}))},t.autoInit=function(s=".select3-container select"){return e(s).filter((function(){return!this._select3})).map((function(){const e=new t(this);return this._select3=e,e})).get()},window.Select3=t}(jQuery);