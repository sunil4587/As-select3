/*!
 * As-Select3 - Modern JavaScript Select Library with HTML Rendering Support
 * Version: 1.1.0
 * Author: Sunil Kumar
 * Repository: https://github.com/sunil4587/As-select3
 * License: MIT
 */
(o=>{class t{constructor(e,t={}){if(!o(e).length)throw new Error(`As-Select3: Element "${e}" not found`);this.$element=o(e),this.element=this.$element[0];let s=this.$element.closest(".as-select3-container");s.length||(s=o('<div class="as-select3-container"></div>'),this.$element.before(s),s.append(this.$element)),this.$container=s,this.isMultiple=void 0!==this.$element.attr("multiple"),this.options=o.extend({placeholder:this.isMultiple?"Select options...":"Choose an option...",searchable:!1!==this.$element.data("search"),selectAll:!1!==t.selectAll&&this.isMultiple,clearAll:!1!==t.clearAll,maxSelection:t.maxSelection||null,remote:t.remote||null,searchDelay:t.searchDelay||300,noResultsText:"No results found",loadingText:"Loading...",searchPlaceholder:"Search options...",selectAllText:"Select All",clearAllText:"Clear All",defaultIconClass:"bi bi-chevron-down",iconPrefix:t.iconPrefix||null,allowHtml:!1!==t.allowHtml,escapeMarkup:t.escapeMarkup||function(e){return e},templateResult:t.templateResult||null,templateSelection:t.templateSelection||null,matcher:t.matcher||null},t),this.isOpen=!1,this.focusIndex=-1,this.selectedValues=this.isMultiple?[]:this.$element.find("option:selected").val()||null,this.isLoading=!1,this.searchTimer=null,this.originalOptions=[],this.init()}init(){this.createUI(),this.bindEvents(),this.updateFromSelect(),this.storeOriginalOptions()}createUI(){this.$trigger=o('<div class="as-select3-trigger" tabindex="0" role="combobox" aria-expanded="false"></div>'),this.$selection=o('<div class="as-select3-selection"></div>'),this.$placeholder=o(`<span class="as-select3-placeholder">${this.options.placeholder}</span>`),this.$arrow=o(`<i class="${this.options.defaultIconClass} as-select3-arrow"></i>`),this.$selection.append(this.$placeholder),this.$trigger.append(this.$selection,this.$arrow),this.$container.append(this.$trigger),this.$element.addClass("d-none"),this.createDropdown()}createDropdown(){this.$dropdown=o('<div class="as-select3-dropdown" role="listbox"></div>'),this.options.searchable&&this.createSearch(),this.createOptionsContainer();var e=this.$element.find("option:not(:disabled)").length,e=this.options.selectAll&&(!this.options.maxSelection||this.options.maxSelection>=e);(e||this.options.clearAll)&&this.createActions(e),this.$container.append(this.$dropdown)}createSearch(){var e=o('<div class="as-select3-search"><div class="position-relative w-100"></div></div>'),t=(this.$searchInput=o('<input type="text" class="form-control form-control-sm" role="searchbox">').attr("placeholder",this.options.searchPlaceholder),o(`<i class="${this.getCloseIcon()} as-select3-search-clear"></i>`));e.find("div").append(this.$searchInput,t),this.$dropdown.append(e)}createOptionsContainer(){this.$optionsContainer=o('<div class="as-select3-options"></div>'),this.$element.find("option").each((e,t)=>{this.$optionsContainer.append(this.createOptionElement(t,e))}),this.$dropdown.append(this.$optionsContainer)}createOptionElement(e,t){var s,e=e instanceof HTMLOptionElement?{value:e.value,text:e.text,selected:e.selected,icon:o(e).data("icon")||o(e).attr("data-icon"),html:o(e).data("html")||o(e).attr("data-html")||o(e).html(),disabled:e.disabled}:{value:e.value||e.val,text:e.text||e.label,selected:!!e.selected,icon:e.icon,html:e.html||e.text||e.label,disabled:!!e.disabled},t=o('<div class="as-select3-option" role="option" tabindex="-1"></div>').data({value:e.value,index:t,icon:e.icon,html:e.html,text:e.text}).attr("aria-selected",e.selected.toString()),i=o('<div class="as-select3-option-left"></div>');return this.options.templateResult&&"function"==typeof this.options.templateResult?(s=this.options.templateResult(e))&&i.html(s):this.options.allowHtml&&e.html&&e.html!==e.text?i.html(this.options.escapeMarkup(e.html)):(e.icon&&(s=o('<div class="as-select3-option-icon"></div>'),this.addIcon(s,e.icon,"16px"),i.append(s)),i.append(o('<span class="as-select3-option-text"></span>').text(e.text))),t.append(i),this.isMultiple&&t.append(o('<input type="checkbox" class="form-check-input">').prop("checked",e.selected)),e.selected&&t.addClass("selected"),e.disabled&&t.addClass("disabled").attr("aria-disabled","true"),t}addIcon(e,t,s="14px"){t&&(t.match(/^(https?:|data:|\.?\/)/)?e.append(o("<img>").attr({src:t,alt:""}).css({width:s,height:s,objectFit:"cover"})):this.isIconClass(t)?(s=o("<i></i>").addClass(t),e.append(s)):e.html(t))}isIconClass(t){return!(!t||"string"!=typeof t)&&(["bi-","fa-","fas-","far-","fab-","fal-","fad-","material-icons","icon-","glyphicon-","mdi-","feather-","lucide-","tabler-icon-","heroicon-","phosphor-","remix-"].some(e=>t.includes(e))||t.match(/^(bi|fa|fas|far|fab|fal|fad|material-icons|icon|glyphicon|mdi|feather|lucide|tabler|heroicon|phosphor|remix)\s/)||this.options.iconPrefix&&t.startsWith(this.options.iconPrefix))}getCloseIcon(){return this.options.defaultIconClass.includes("fa")?"fas fa-times":this.options.defaultIconClass.includes("material")?"material-icons":this.options.defaultIconClass.includes("feather")?"feather feather-x":this.options.defaultIconClass.includes("lucide")?"lucide lucide-x":"bi bi-x"}getSearchIcon(){return this.options.defaultIconClass.includes("fa")?"fas fa-search":this.options.defaultIconClass.includes("material")?"material-icons":this.options.defaultIconClass.includes("feather")?"feather feather-search":this.options.defaultIconClass.includes("lucide")?"lucide lucide-search":"bi bi-search"}createActions(e=this.options.selectAll){var t;this.isMultiple&&(t=o('<div class="as-select3-actions"></div>'),e&&t.append(o('<button type="button" class="btn btn-sm btn-outline-primary"></button>').text(this.options.selectAllText).on("click",()=>this.selectAll())),this.options.clearAll&&t.append(o('<button type="button" class="btn btn-sm btn-outline-secondary"></button>').text(this.options.clearAllText).on("click",()=>this.clearAll())),this.$dropdown.append(t))}bindEvents(){this.$trigger.on("click",e=>{o(e.target).hasClass("as-select3-clear")||(e.preventDefault(),this.toggle())}),this.$container.on("click",".as-select3-clear",e=>(e.stopPropagation(),e.preventDefault(),this.clearSingle(),!1)).on("click",".as-select3-tag-remove",e=>{e.stopPropagation(),e.preventDefault();e=o(e.target).closest(".as-select3-tag").data("value");return e&&this.removeTag(e),!1}).on("click",".as-select3-search-clear",e=>(e.stopPropagation(),e.preventDefault(),this.$searchInput&&this.$searchInput.val("").trigger("input").focus(),!1)),this.$trigger.on("keydown",e=>this.handleKeyDown(e)),this.$searchInput&&(this.$searchInput.on("input",e=>{let t=e.target.value;this.options.remote?(this.searchTimer&&clearTimeout(this.searchTimer),this.searchTimer=setTimeout(()=>this.remoteSearch(t),this.options.searchDelay)):this.search(t)}),this.$searchInput.on("keydown",e=>{"Escape"===e.key&&this.close()})),this.$optionsContainer.on("click",".as-select3-option",e=>{e=o(e.currentTarget);if(e.hasClass("disabled"))return!1;this.toggleOption(e)}),o(document).on("click.asSelect3",e=>{this.$container.is(e.target)||this.$container.has(e.target).length||this.close()}),this.$element.on("invalid",()=>this.$trigger.addClass("is-invalid")).closest("form").on("reset.asSelect3",()=>{setTimeout(()=>this.reset(),0)})}handleKeyDown(e){var t,s=e.key;switch(s){case"Enter":case" ":e.preventDefault(),this.isOpen?(t=this.$optionsContainer.find(".focused")).length&&this.toggleOption(t):this.open();break;case"Escape":this.isOpen&&(e.preventDefault(),this.close());break;case"ArrowDown":e.preventDefault(),this.isOpen?this.focusNext():this.open();break;case"ArrowUp":e.preventDefault(),this.isOpen?this.focusPrevious():this.open();break;case"Tab":this.isOpen&&(e.preventDefault(),this.focusNext())}}focusNext(){var e=this.$optionsContainer.find(".as-select3-option:visible:not(.disabled)");e.length&&(this.$optionsContainer.find(".focused").removeClass("focused"),this.focusIndex=this.focusIndex<e.length-1?this.focusIndex+1:0,this.scrollToOption(e.eq(this.focusIndex).addClass("focused")))}focusPrevious(){var e=this.$optionsContainer.find(".as-select3-option:visible:not(.disabled)");e.length&&(this.$optionsContainer.find(".focused").removeClass("focused"),this.focusIndex=0<this.focusIndex?this.focusIndex-1:e.length-1,this.scrollToOption(e.eq(this.focusIndex).addClass("focused")))}scrollToOption(e){var t,s;e.length&&(t=this.$optionsContainer[0],e=(s=e[0].offsetTop)+e[0].offsetHeight,s<t.scrollTop?t.scrollTop=s:e>t.scrollTop+t.clientHeight&&(t.scrollTop=e-t.clientHeight))}toggle(){this.isOpen?this.close():this.open()}open(){this.isOpen||(this.isOpen=!0,this.$dropdown.addClass("show"),this.$trigger.addClass("active").attr("aria-expanded","true"),this.$searchInput&&this.$searchInput.focus(),this.$element.trigger("asSelect3:open"))}close(){this.isOpen&&(this.isOpen=!1,this.$dropdown.removeClass("show"),this.$trigger.removeClass("active").attr("aria-expanded","false"),this.$optionsContainer.find(".focused").removeClass("focused"),this.focusIndex=-1,this.$searchInput&&(this.$searchInput.val(""),this.search("")),this.$element.trigger("asSelect3:close"))}toggleOption(e){if(e?.length&&!e.hasClass("disabled")){let t=e.data("value");var s=this.$element.find(`option[value="${t}"]`);if(s.length){var i=e.hasClass("selected");if(i)s.prop("selected",!1),e.removeClass("selected").attr("aria-selected","false"),this.isMultiple?(e.find('input[type="checkbox"]').prop("checked",!1),this.selectedValues=this.selectedValues.filter(e=>e!==t)):this.selectedValues=null;else{if(this.isMultiple){if(this.options.maxSelection&&this.selectedValues.length>=this.options.maxSelection)return void this.$element.trigger("asSelect3:maxselection",{max:this.options.maxSelection});this.selectedValues.push(t)}else this.$optionsContainer.find(".as-select3-option").removeClass("selected").attr("aria-selected","false"),this.$element.find("option").prop("selected",!1),this.selectedValues=t;s.prop("selected",!0),e.addClass("selected").attr("aria-selected","true"),this.isMultiple?e.find('input[type="checkbox"]').prop("checked",!0):this.close()}i&&!this.isMultiple||(this.$trigger.removeClass("is-invalid"),this.updateSelection(),this.$element.trigger("change").trigger("asSelect3:change",{value:this.getValue()}))}}}search(a){if(this.options.matcher&&"function"==typeof this.options.matcher)this.customSearch(a);else{var e=this.$optionsContainer.find(".as-select3-option").not(".as-select3-no-results, .as-select3-loading");let i=!1;e.each((e,t)=>{var t=o(t),s=t.data("text")||t.text(),s=this.matchText(s,a);t.toggle(s),s&&(i=!0)}),this.toggleNoResults(!i&&0<a.length),this.focusIndex=-1}}customSearch(i){var e=this.$optionsContainer.find(".as-select3-option").not(".as-select3-no-results, .as-select3-loading");let a=!1;e.each((e,t)=>{var t=o(t),s={id:t.data("value"),text:t.data("text")||t.text(),html:t.data("html")},s=this.options.matcher(i,s);t.toggle(s),s&&(a=!0)}),this.toggleNoResults(!a&&0<i.length),this.focusIndex=-1}matchText(e,t){return e.toLowerCase().includes(t.toLowerCase())}async remoteSearch(e){if(this.options.remote&&"function"==typeof this.options.remote){this.showLoading();try{var t=await this.options.remote(e);Array.isArray(t)?this.populateOptions(t):t?.options&&Array.isArray(t.options)?this.populateOptions(t.options):console.warn("Invalid remote response")}catch(e){console.error("Remote search error:",e),this.showNoResults(),this.$element.trigger("asSelect3:error",{error:e})}finally{this.hideLoading()}}}showLoading(){this.isLoading=!0,this.hideNoResults(),this.$optionsContainer.find(".as-select3-option").hide();var e=".as-select3-loading";this.$optionsContainer.find(e).length||this.$optionsContainer.append(o(`<div class="${e.substring(1)}">
                        <div class="spinner-border spinner-border-sm me-2"></div>
                        ${this.options.loadingText}
                    </div>`))}hideLoading(){this.isLoading=!1,this.$optionsContainer.find(".as-select3-loading").remove(),this.$optionsContainer.find(".as-select3-option").show()}toggleNoResults(e){var t=".as-select3-no-results",s=this.$optionsContainer.find(t);e&&!s.length?this.$optionsContainer.append(o(`<div class="${t.substring(1)}">
                        <i class="${this.getSearchIcon()} me-2"></i>
                        ${this.options.noResultsText}
                    </div>`)):!e&&s.length&&s.remove()}hideNoResults(){this.$optionsContainer.find(".as-select3-no-results").remove()}selectAll(){var e;this.isMultiple&&((e=this.$element.find("option:not(:disabled)")).prop("selected",!0),e.each((e,t)=>{t=t.value,t=this.$optionsContainer.find(`[data-value="${t}"]`);t.length&&!t.hasClass("disabled")&&(t.addClass("selected").attr("aria-selected","true"),t.find('input[type="checkbox"]').prop("checked",!0))}),this.updateFromSelect(),this.$element.trigger("change").trigger("asSelect3:selectall"))}clearAll(){this.$element.find("option").prop("selected",!1),this.isMultiple?(this.selectedValues=[],this.$optionsContainer.find(".as-select3-option").removeClass("selected").attr("aria-selected","false"),this.$optionsContainer.find('input[type="checkbox"]').prop("checked",!1)):(this.selectedValues=null,this.$optionsContainer.find(".as-select3-option").removeClass("selected").attr("aria-selected","false")),this.updateSelection(),this.$element.trigger("change").trigger("asSelect3:clearall")}updateSelection(){var e,t,s,i,a,l,n;this.$selection.empty(),this.isMultiple?this.selectedValues.length?this.selectedValues.forEach(e=>{var t,s,i=this.$element.find(`option[value="${e}"]`),a=this.$optionsContainer.find(`[data-value="${e}"]`);i.length&&(t=i.text(),s=i.attr("data-html")||a.data("html"),i=i.attr("data-icon")||a.data("icon"),this.$selection.append(this.createTag(t,e,s,i)))}):this.$selection.append(this.$placeholder):this.selectedValues?(l=this.$element.find(`option[value="${this.selectedValues}"]`),n=this.$optionsContainer.find(`[data-value="${this.selectedValues}"]`),l.length&&(e=o('<div class="as-select3-single-container"></div>'),t=o('<span class="as-select3-single-value"></span>'),s=o(`<i class="${this.getCloseIcon()} as-select3-clear"></i>`).attr("data-value",this.selectedValues),i=l.text(),a=l.attr("data-html")||n.data("html"),l=l.attr("data-icon")||n.data("icon"),this.options.templateSelection&&"function"==typeof this.options.templateSelection?(n=this.options.templateSelection({id:this.selectedValues,text:i,html:a}))&&t.html(n):this.options.allowHtml&&a&&a!==i&&""!==a.trim()?t.html(this.options.escapeMarkup(a)):(l&&(n=o('<div class="as-select3-single-icon"></div>'),this.addIcon(n,l,"16px"),t.append(n)),t.append(o("<span></span>").text(i))),e.append(t,s),this.$selection.append(e))):this.$selection.append(this.$placeholder),this.updateOptionStates()}renderSingleValueWithIcon(e,t,s){var i,a=t.data("icon")||s.data("icon");a&&(i=o('<div class="as-select3-single-icon"></div>'),this.addIcon(i,a,"16px"),e.append(i)),e.append(o("<span></span>").text(t.data("text")||s.text()))}updateOptionStates(){if(this.isMultiple&&this.options.maxSelection){let a=this.selectedValues.length>=this.options.maxSelection;this.$optionsContainer.find(".as-select3-option").each((e,t)=>{var t=o(t),s=t.hasClass("selected"),i=t.find('input[type="checkbox"]');a&&!s?(t.addClass("disabled").attr("aria-disabled","true"),i.prop("disabled",!0)):(t.removeClass("disabled").attr("aria-disabled","false"),i.prop("disabled",!1))})}}createTag(e,t,s,i){var a=o('<span class="as-select3-tag"></span>').data("value",t);let l,n;if(this.options.templateSelection&&"function"==typeof this.options.templateSelection){var t=this.options.templateSelection({id:t,text:e,html:s});if(t)return l=o('<span class="as-select3-tag-content"></span>').html(t),n=o(`<i class="${this.getCloseIcon()} as-select3-tag-remove"></i>`),a.append(l,n),a}return n=(l=this.options.allowHtml&&s&&s!==e&&""!==s.trim()?o('<span class="as-select3-tag-content"></span>').html(this.options.escapeMarkup(s)):(i&&(t=o('<div class="as-select3-tag-icon"></div>'),this.addIcon(t,i),a.append(t)),o('<span class="as-select3-tag-text"></span>').text(e).attr("title",e)),o(`<i class="${this.getCloseIcon()} as-select3-tag-remove"></i>`)),a.append(l,n),a}removeTag(t){var e=this.$element.find(`option[value="${t}"]`),s=this.$optionsContainer.find(`[data-value="${t}"]`);e.length&&(e.prop("selected",!1),this.isMultiple?(s.find('input[type="checkbox"]').prop("checked",!1),this.selectedValues=this.selectedValues.filter(e=>e!==t)):this.selectedValues=null,s.removeClass("selected").attr("aria-selected","false"),this.updateSelection(),this.$element.trigger("change").trigger("asSelect3:tagremoved",{value:t}))}clearSingle(){this.selectedValues=null,this.$element.find("option").prop("selected",!1),this.$optionsContainer.find(".as-select3-option").removeClass("selected").attr("aria-selected","false"),this.updateSelection(),this.$element.trigger("change").trigger("asSelect3:cleared")}clearSelection(){this.isMultiple?this.clearAll():this.clearSingle()}updateFromSelect(){this.isMultiple?(this.selectedValues=[],this.$element.find("option:selected").each((e,t)=>{this.selectedValues.push(t.value)})):this.selectedValues=this.$element.find("option:selected").val()||null,this.updateSelection()}storeOriginalOptions(){this.originalOptions=this.$element.find("option").map(function(){return{value:this.value,text:this.text,selected:this.selected,html:o(this).data("html"),icon:o(this).data("icon")}}).get()}populateOptions(e=[]){this.$element.empty(),this.$optionsContainer.empty(),e.forEach((e,t)=>{var s=o("<option></option>").val(e.value).text(e.text||e.label).prop("selected",!!e.selected);e.icon&&s.data("icon",e.icon),e.html&&s.data("html",e.html),e.disabled&&s.prop("disabled",!0),this.$element.append(s),this.$optionsContainer.append(this.createOptionElement({value:e.value,text:e.text||e.label,selected:!!e.selected,icon:e.icon,html:e.html,disabled:!!e.disabled},t))}),this.updateFromSelect()}addOption(e){var t=o("<option></option>").val(e.value).text(e.text||e.label).prop("selected",!!e.selected);return e.icon&&t.data("icon",e.icon),e.html&&t.data("html",e.html),e.disabled&&t.prop("disabled",!!e.disabled),this.$element.append(t),this.$optionsContainer.append(this.createOptionElement(e,this.$element.find("option").length-1)),e.selected&&this.updateFromSelect(),this.$element.trigger("asSelect3:optionadded",{option:e}),t}removeOption(t){this.$element.find(`option[value="${t}"]`).remove(),this.$optionsContainer.find(`[data-value="${t}"]`).remove(),this.isMultiple?this.selectedValues=this.selectedValues.filter(e=>e!==t):this.selectedValues===t&&(this.selectedValues=null),this.updateSelection(),this.$element.trigger("asSelect3:optionremoved",{value:t})}clearOptions(){this.$element.empty(),this.$optionsContainer.empty(),this.selectedValues=this.isMultiple?[]:null,this.updateSelection(),this.$element.trigger("asSelect3:optionscleared")}refreshOptions(){this.$optionsContainer.empty(),this.$element.find("option").each((e,t)=>{this.$optionsContainer.append(this.createOptionElement(t,e))}),this.updateFromSelect()}getValue(){return this.selectedValues}setValue(e){Array.isArray(e)&&this.isMultiple?(this.$element.find("option").prop("selected",!1),e.forEach(e=>{this.$element.find(`option[value="${e}"]`).prop("selected",!0)})):Array.isArray(e)||this.isMultiple||(this.$element.find("option").prop("selected",!1),this.$element.find(`option[value="${e}"]`).prop("selected",!0)),this.updateFromSelect(),this.$element.trigger("change").trigger("asSelect3:valuechanged",{value:this.getValue()})}reset(){this.clearAll(),this.originalOptions.forEach(e=>{e.selected&&(this.isMultiple?this.selectedValues.push(e.value):this.selectedValues=e.value)}),this.updateFromSelect()}enable(){this.$container.removeClass("disabled"),this.$trigger.attr("tabindex","0"),this.$element.prop("disabled",!1)}disable(){this.close(),this.$container.addClass("disabled"),this.$trigger.attr("tabindex","-1"),this.$element.prop("disabled",!0)}destroy(){return this.close(),this.$trigger.off(),this.$container.off(),this.$optionsContainer.off(),o(document).off("click.asSelect3"),this.$element.off("invalid").closest("form").off("reset.asSelect3"),this.$element.removeClass("d-none").insertAfter(this.$container),this.$container.remove(),delete this.element._asSelect3,this.$element}}o.fn.asSelect3=function(e){return this.each(function(){this._asSelect3||(this._asSelect3=new t(this,e))})},t.autoInit=function(e=".as-select3-container select"){return o(e).filter(function(){return!this._asSelect3}).map(function(){var e=new t(this);return this._asSelect3=e}).get()},window.AsSelect3=t})(jQuery);
//# sourceMappingURL=as-select3.min.js.map//# sourceMappingURL=as-select3.min.js.map
